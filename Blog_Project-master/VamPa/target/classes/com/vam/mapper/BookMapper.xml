<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.vam.mapper.BookMapper">

	<!-- criteria(검색조건) -->
	<sql id="criteria">

	  	<trim prefix="(" suffix=") AND" prefixOverrides="AND">
	  		<foreach item="type" collection="typeArr">
	  			<trim prefix="AND">
	  				<choose>
	  					<when test="type == 'A'.toString()">
	  						<trim prefixOverrides="or">
			  					<foreach collection="authorArr" item="authorId">
			  						<trim prefix="or">
			  							authorId = #{authorId}
			  						</trim>
			  					</foreach>  						
	  						</trim>
	  					</when>
	  					<when test="type == 'C'.toString()">
	  						cateCode like '%' || #{cateCode} || '%'
	  					</when>  					
	  					<when test="type == 'T'.toString()">
	  						bookName like '%' || #{keyword} || '%'
	  					</when>  					
	  				</choose>
	  			</trim>
	  		</foreach>
	  	</trim>

	</sql>

	
	<!-- 상품 검색 -->
	<select id="getGoodsList" resultType="com.vam.model.BookVO">
	
		<![CDATA[
		    select * from(
		        select /*+INDEX_DESC(vam_book SYS_C008227)*/ rownum as rn, bookId, bookName,
		            (select authorName from vam_author where vam_book.authorId = vam_author.authorId) authorName, authorId,
		            (select cateName from vam_bcate where vam_book.cateCode = vam_bcate.cateCode) cateName,cateCode, publisher, publeYear, bookPrice,bookDiscount  
		        from vam_book
		        where 
	    ]]>
	    
	    <include refid="criteria"></include>
	    
	    <![CDATA[
		        rownum <= #{pageNum} * #{amount} 
	        	)
	        where rn > (#{pageNum} -1) * #{amount}
		]]>	  		
	
	</select>
	
	<!-- 상품 총 개수 -->
	<select id="goodsGetTotal" resultType="int">
	
		select count(*) from vam_book
		where
		<include refid="criteria"></include> 
		bookId >0
		
	</select>
	
	<!-- 작가 id 리스트 요청 -->
	<select id="getAuthorIdList" resultType="String">
	
		select authorid from vam_author where authorName like '%' || #{keyword} || '%'
	
	</select>	
	
	<!-- 국내 카테고리 리스트 -->
	<select id="getCateCode1" resultType="com.vam.model.CateVO">
	
		<![CDATA[
			select * from vam_bcate where cateCode > 100000 and cateCode < 200000
		]]>
	</select>
	
	<!-- 외국 카테고리 리스트 -->
	<select id="getCateCode2" resultType="com.vam.model.CateVO">
	
		<![CDATA[
			select * from vam_bcate where cateCode > 200000 and cateCode < 300000
		]]>
	
	</select>		
	
	<!-- 검색 대상 카테고리 리스트 -->
	<select id="getCateList" resultType="String">
	
		select DISTINCT cateCode from vam_book where 
		<foreach item="type" collection="typeArr">		
  				<choose>
  					<when test="type == 'A'.toString()">
  						<trim prefixOverrides="or">
		  					<foreach collection="authorArr" item="authorId">
		  						<trim prefix="or">
		  							authorId = #{authorId}
		  						</trim>
		  					</foreach>  						
  						</trim>
  					</when>
  					<when test="type == 'T'.toString()">
  						bookName like '%' || #{keyword} || '%'
  					</when>  					
  				</choose>
  		</foreach>
	
	</select>	
	
	<!-- 카테고리 정보(+검색대상 갯수) -->	
	
	<select id="getCateInfo" resultType="com.vam.model.CateFilterDTO">
	
		select DISTINCT count(*) cateCount, a.cateCode, b.cateName from vam_book a left join vam_bcate b on a.cateCode = b.cateCode
		
		where 

		<foreach item="type" collection="typeArr">		
  				<choose>
  					<when test="type == 'A'.toString()">
  					
  						<trim prefix="(" suffix=")" prefixOverrides="or">
  						
		  					<foreach collection="authorArr" item="authorId">
		  					
		  						<trim prefix="or">
		  						
		  							authorId = #{authorId}
		  							
		  						</trim>
		  						
		  					</foreach>
		  					  						
  						</trim>
  						
  						and a.cateCode = #{cateCode}
  						
  					</when>
  					
  					<when test="type == 'T'.toString()">
  					
  						bookName like '%' || #{keyword} || '%' and a.cateCode = #{cateCode}
  						 
  					</when>
  					  					
  				</choose>
  		</foreach>
  		
  		group by a.cateCode, b.cateName
	
	</select>		
	
	<!-- 상품 정보 -->
	<select id="getGoodsInfo" resultType="com.vam.model.BookVO">
	
			select a.BOOKID, a.BOOKNAME, a.AUTHORID, b.AUTHORNAME, a.PUBLEYEAR, a.PUBLISHER, a.CATECODE, c.CATENAME, a.BOOKPRICE, a.BOOKSTOCK, a.BOOKDISCOUNT, a.BOOKINTRO, a.BOOKCONTENTS
			from vam_book a left outer join vam_author b on a.authorId = b.authorId
			left outer join vam_bcate c on a.catecode = c.catecode
			where bookid = ${bookId}	
	
	</select>	
	
	<select id="getBookIdName" resultType="com.vam.model.BookVO">
	
		select bookId, bookName from vam_book 
		where bookId = #{bookId}
	
	
	</select>	
	
	<select id="likeSelect" resultType="com.vam.model.SelectDTO">
	
		select * from
		(select rownum as rn, bookId, bookName, ratingAvg, (select cateName from vam_bcate where vam_book.cateCode = vam_bcate.cateCode) as cateName
		from vam_book
		order by ratingAvg desc nulls last)
		<![CDATA[
		where rn < 9
		]]>	
	
	</select>	
	
		
	
  </mapper>